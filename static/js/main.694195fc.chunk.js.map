{"version":3,"sources":["components/Header/Header.js","components/1_Home/Home.js","api/api.js","components/2_Characters/Characters_Filters/Filters.js","components/2_Characters/Character/Character.js","components/Pagination/Pagination.js","components/Loader/Loader.js","components/2_Characters/Characters.js","components/3_Episodes/Episodes_Filters/Filters.js","components/3_Episodes/Episodes.js","components/4_Locations/Locations_Filters/Filters.js","components/4_Locations/Locations.js","components/5_Watch_List/TodoItem.js","components/5_Watch_List/TodoList.js","components/5_Watch_List/AddNewTodoForm.js","components/5_Watch_List/Helpers.js","components/5_Watch_List/Todo.js","App.js","index.js","images/spinner.svg"],"names":["Header","links","react_default","a","createElement","react_router_dom","activeClassName","exact","to","className","this","map","link","i","key","Component","Home","URLS","getData","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","url","response","wrap","_context","prev","next","fetch","sent","ok","Error","statusText","abrupt","json","stop","_x","apply","arguments","createLinkForRequest","objAttributes","URLSearchParams","toString","getCharacters","length","undefined","createdUrl","getEpisodes","getLocations","Filters","props","onSubmit","handleSubmit","name","type","placeholder","onChange","handleChange","defaultValue","searchValue","genderValue","value","speciesValue","statusValue","Character","src","imageSrc","alt","species","gender","status","Pagination","paginationArray","current","total","list","lowerLimit","Math","min","upperLimit","b","push","getPaginationArray","currentPage","pages","onClick","handleClick","pageNumber","classNames","active","Loader","isLoaded","children","loaderImage","Characters","state","id","origins","locations","episode","characters","page","handlePaginationClick","event","clickedPageNumber","target","textContent","_this","setState","slicedListResults","fetchCharacters","Array","prototype","slice","call","results","info","handleInputChange","_event$target","defineProperty","handleFormSubmit","preventDefault","_callee2","_context2","origin","_this$state","originName","originUrl","locationName","locationUrl","components_Loader_Loader","_2_Characters_Characters_Filters_Filters","originNameValue","originUrlValue","locationNameValue","locationUrlValue","episodeValue","character","_2_Characters_Character_Character","image","location","components_Pagination_Pagination","Episodes","air_date","episodes","created","fetchEpisodes","_3_Episodes_Episodes_Filters_Filters","colSpan","console","log","typeValue","nameValue","dimensionValue","Locations","dimension","residents","fetchLocations","_4_Locations_Locations_Filters_Filters","React","memo","todo","onRemoveTodo","onToggleTodoDone","onEditTodo","isDone","setCustomError","removeTodoHandler","useCallback","toggleTodoDoneHandler","editTodoHandler","keyCode","blur","checkboxRef","useRef","ref","checked","click","onKeyDown","style","textDecoration","role","aria-labelledby","todoItems","isArray","_ref2","_5_Watch_List_TodoItem","onAddTodo","customError","formik","useFormik","validateOnChange","validateOnBlur","initialValues","validationSchema","Yup","shape","max","required","values","resetForm","errorKeys","keys","errors","aFormikError","error","Fragment","autoComplete","saveTodoItemsToLocalStorage","data","localStorage","setItem","JSON","stringify","_useState","useState","getItem","parsedJSON","parse","e","getTodoItemsFromLocalStorage","_useState2","slicedToArray","setTodoItems","_useState3","_useState4","addTodoHandler","latestTodoItem","sort","newTodoItems","concat","toConsumableArray","filter","todoItem","find","_5_Watch_List_AddNewTodoForm","_5_Watch_List_TodoList","App","components_Header_Header","react_router","path","component","Watchlist","ReactDOM","render","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.694195fc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./Header.scss\";\r\n\r\nclass Header extends Component {\r\n  links = [\r\n    <NavLink activeClassName=\"is-active\" exact to=\"/\">Home</NavLink>,\r\n    <NavLink activeClassName=\"is-active\" to=\"/characters/\">Characters</NavLink>,\r\n    <NavLink activeClassName=\"is-active\" to=\"/episodes/\">Episodes</NavLink>,\r\n    <NavLink activeClassName=\"is-active\" to=\"/locations/\">Locations</NavLink>,\r\n    <NavLink activeClassName=\"is-active\" to=\"/watchlist/\">My Watch List</NavLink>,\r\n  ];\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        <nav>\r\n          <ul className=\"nav-list\">\r\n            {this.links.map((link, i) => (\r\n              <li className=\"nav-list-item\" key={i}>\r\n                {link}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport './Home.scss';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home-container\">\r\n      <div className=\"home-title\">\r\n        <h1>Meet Rick and Morty</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","const URLS = {\r\n  characters: \"https://rickandmortyapi.com/api/character\",\r\n  locations: \"https://rickandmortyapi.com/api/location\",\r\n  episodes: \"https://rickandmortyapi.com/api/episode\"\r\n};\r\n\r\nconst getData = async url => {\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error(response.statusText);\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\nconst createLinkForRequest = (objAttributes, url) => {\r\n  const searchParams = new URLSearchParams(objAttributes);\r\n\r\n  return url + searchParams.toString();\r\n};\r\n\r\nconst getCharacters = (objAttributes, url = URLS.characters + '/?') => {\r\n  const createdUrl = createLinkForRequest(objAttributes, url);\r\n  const data = getData(createdUrl);\r\n\r\n  return data;\r\n};\r\n\r\nconst getEpisodes = (objAttributes, url = URLS.episodes + '/?') => {\r\n  const createdUrl = createLinkForRequest(objAttributes, url);\r\n  const data = getData(createdUrl);\r\n\r\n  return data;\r\n};\r\n\r\nconst getLocations = (objAttributes, url = URLS.locations + '/?') => {\r\n  const createdUrl = createLinkForRequest(objAttributes, url);\r\n  const data = getData(createdUrl);\r\n\r\n  return data;\r\n};\r\n\r\nexport { URLS, getCharacters, getEpisodes, getLocations };\r\n","import React from \"react\";\r\n\r\nimport \"./Filters.scss\";\r\n\r\nconst Filters = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className=\"filter-form\">\r\n      <input\r\n        name=\"name\"\r\n        type=\"text\"\r\n        className=\"filter-search\"\r\n        placeholder=\"Enter name\"\r\n        onChange={props.handleChange}\r\n        defaultValue={props.searchValue}\r\n      />\r\n      <select\r\n        name=\"gender\"\r\n        className=\"filter-select\"\r\n        onChange={props.handleChange}\r\n        defaultValue={props.genderValue}\r\n      >\r\n        <option value=\"\">All</option>\r\n        <option value=\"female\">female</option>\r\n        <option value=\"male\">male</option>\r\n        <option value=\"genderless\">genderless</option>\r\n        <option value=\"unknown\">unknown</option>\r\n      </select>\r\n      <select\r\n        name=\"species\"\r\n        className=\"filter-select\"\r\n        onChange={props.handleChange}\r\n        defaultValue={props.speciesValue}\r\n      >\r\n        <option value=\"\">All</option>\r\n        <option value=\"human\">human</option>\r\n        <option value=\"alien\">alien</option>\r\n      </select>\r\n      <select\r\n        name=\"status\"\r\n        className=\"filter-select\"\r\n        onChange={props.handleChange}\r\n        defaultValue={props.statusValue}\r\n      >\r\n        <option value=\"\">All</option>\r\n        <option value=\"alive\">alive</option>\r\n        <option value=\"dead\">dead</option>\r\n        <option value=\"unknown\">unknown</option>\r\n      </select>\r\n      <input type=\"submit\" value=\"Filter\" className=\"filter-submit\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React from \"react\";\r\n\r\nimport \"./Character.scss\";\r\n\r\nconst Character = props => (\r\n  <div className=\"card\">\r\n    <img className=\"card-image\" src={props.imageSrc} alt=\"character\" />\r\n    <h2 className=\"card-name\">{props.name}</h2>\r\n    <p className=\"card-species\">Species: {props.species}</p>\r\n    <p className=\"card-gender\">Gender: {props.gender}</p>\r\n    <p className=\"card-gender\">Status: {props.status}</p>\r\n  </div>\r\n);\r\n\r\nexport default Character;\r\n","import React from \"react\";\r\n\r\nimport classNames from \"classnames/bind\";\r\n\r\nimport \"./Pagination.scss\";\r\n\r\nconst getPaginationArray = (current, total) => {\r\n  let list = [];\r\n  let lowerLimit = Math.min(current, total);\r\n  let upperLimit = Math.min(current, total);\r\n  const PAGE_LIMIT = 3;\r\n\r\n  for (let b = 1; b < PAGE_LIMIT && b < total; b++) {\r\n    if (lowerLimit > 1) {\r\n      lowerLimit--;\r\n    }\r\n    if (b < PAGE_LIMIT && upperLimit < total) {\r\n      upperLimit++;\r\n    }\r\n  }\r\n\r\n  for (let i = lowerLimit; i <= upperLimit; i++) {\r\n    list.push(i);\r\n  }\r\n  return list;\r\n};\r\n\r\nconst Pagination = props => {\r\n  const paginationArray = getPaginationArray(props.currentPage, props.pages);\r\n\r\n  return (\r\n    <ul onClick={props.handleClick} className=\"pagination\">\r\n      {paginationArray.map(pageNumber => (\r\n        <li\r\n          key={pageNumber}\r\n          className={classNames(\"pagination-item\", {\r\n            active: pageNumber === props.currentPage\r\n          })}\r\n        >\r\n          {pageNumber}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nimport loaderImage from \"../../images/spinner.svg\";\r\n\r\nimport \"./Loader.scss\";\r\n\r\nconst Loader = props => {\r\n  const isLoaded = props.isLoaded;\r\n\r\n  if (!isLoaded) {\r\n    return (\r\n      <div className=\"preloader\">\r\n        <img src={loaderImage} alt=\"spinner\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return props.children;\r\n};\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { getCharacters } from \"../../api/api\";\r\n\r\nimport { Filters } from \"./Characters_Filters\";\r\n\r\nimport { Character } from \"./Character\";\r\n\r\nimport { Pagination } from \"../Pagination\";\r\n\r\nimport { Loader } from \"../Loader\";\r\n\r\nimport \"./Characters.scss\";\r\n\r\nclass Characters extends Component {\r\n  state = {\r\n    id: \"\",\r\n    name: \"\",\r\n    gender: \"\",\r\n    species: \"\",\r\n    status: \"\",\r\n    origins: {name: \"\", url: \"\"},\r\n    locations: {name: \"\", url: \"\"},\r\n    episode: [],\r\n    characters: [],\r\n    page: 1,\r\n    isLoaded: false\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const list = await getCharacters();\r\n    const slicedListResults = Array.prototype.slice.call(list.results, 0);\r\n\r\n    this.setState({\r\n      characters: slicedListResults,\r\n      pages: list.info.pages,\r\n      isLoaded: true\r\n    });\r\n  }\r\n\r\n  handlePaginationClick = event => {\r\n    const clickedPageNumber = +event.target.textContent;\r\n\r\n    this.setState(\r\n      {\r\n        isLoaded: false,\r\n        page: clickedPageNumber\r\n      },\r\n      async () => {\r\n        const list = await this.fetchCharacters();\r\n        const slicedListResults = Array.prototype.slice.call(list.results, 0);\r\n        \r\n        this.setState({\r\n          characters: slicedListResults,\r\n          pages: list.info.pages,\r\n          isLoaded: true\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.setState(\r\n      {\r\n        isLoaded: false,\r\n        page: 1\r\n      },\r\n      async () => {\r\n        const list = await this.fetchCharacters();\r\n        const slicedListResults = Array.prototype.slice.call(list.results, 0);\r\n\r\n        this.setState({\r\n          characters: slicedListResults,\r\n          pages: list.info.pages,\r\n          isLoaded: true\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  fetchCharacters = () =>\r\n    getCharacters({\r\n      id: this.state.id,\r\n      name: this.state.name,\r\n      gender: this.state.gender,\r\n      species: this.state.species,\r\n      status: this.state.status,\r\n      origins: {\r\n        name: () => {if (undefined) {\r\n            return null\r\n          } else { \r\n            return this.state.origin.name\r\n          } \r\n        },\r\n        url: () => {if (undefined) {\r\n          return null\r\n          } else { \r\n            return this.state.origin.url\r\n          } \r\n        }\r\n      },\r\n      locations: {\r\n        name: () => {if (undefined) {\r\n              return null\r\n            } else { \r\n              return this.state.origin.name\r\n            } \r\n          },\r\n        url: () => {if (undefined) {\r\n            return null\r\n          } else { \r\n            return this.state.origin.url\r\n          } \r\n        }\r\n      },\r\n      episode: () => {if (undefined) {\r\n          return null\r\n        } else { \r\n          return this.state.episode.push()\r\n        } \r\n      },\r\n      page: this.state.page\r\n    });\r\n\r\n  render() {\r\n    const {\r\n      characters,\r\n      isLoaded,\r\n      name,\r\n      gender,\r\n      species,\r\n      status,\r\n      originName,\r\n      originUrl,\r\n      locationName,\r\n      locationUrl,\r\n      episode,\r\n      page,\r\n      pages\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Loader isLoaded={isLoaded}>\r\n          <Filters\r\n            handleSubmit={this.handleFormSubmit}\r\n            handleChange={this.handleInputChange}\r\n            searchValue={name}\r\n            genderValue={gender}\r\n            speciesValue={species}\r\n            statusValue={status}\r\n            originNameValue={originName}\r\n            originUrlValue={originUrl}\r\n            locationNameValue={locationName}\r\n            locationUrlValue={locationUrl}\r\n            episodeValue={episode}\r\n          />\r\n          <div className=\"characters characters-background\">\r\n            {characters.map(character => (\r\n              <Character\r\n                id={character.id}\r\n                key={character.id}\r\n                character={character}\r\n                imageSrc={character.image}\r\n                name={character.name}\r\n                species={character.species}\r\n                gender={character.gender}\r\n                status={character.status}\r\n                originName={character.origin.name}\r\n                originUrl={character.origin.url}\r\n                locationName={character.location.name}\r\n                locationUrl={character.location.url}\r\n                episode={character.episode}\r\n              />\r\n            ))}\r\n          </div>\r\n          <Pagination\r\n            handleClick={this.handlePaginationClick}\r\n            currentPage={page}\r\n            pages={pages}\r\n          />\r\n        </Loader>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Characters;\r\n","import React from \"react\";\r\n\r\nimport \"./Filters.scss\";\r\n\r\nconst Filters = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className=\"filter-form\">\r\n      <input\r\n        name=\"name\"\r\n        type=\"text\"\r\n        className=\"filter-search\"\r\n        placeholder=\"Enter name of episode\"\r\n        onChange={props.handleChange}\r\n        defaultValue={props.searchValue}\r\n      />\r\n      <input type=\"submit\" value=\"Filter\" className=\"filter-submit\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { getEpisodes } from \"../../api/api\";\r\n\r\nimport { Filters } from \"./Episodes_Filters\";\r\n\r\nimport { Pagination } from \"../Pagination\";\r\n\r\nimport { Loader } from \"../Loader\";\r\n\r\nimport \"./Episodes.scss\";\r\n\r\n\r\nclass Episodes extends Component {\r\n  state = {\r\n    id: \"\",\r\n    name: \"\",\r\n    air_date: \"\",\r\n    episode: \"\",\r\n    episodes: [],\r\n    created: \"\",\r\n    url: \"\",\r\n    page: 1,\r\n    isLoaded: false\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const list = await getEpisodes();\r\n    // const slicedListResults = Array.prototype.slice.call(list.results, 0);\r\n\r\n    this.setState({\r\n      episodes: list.results,\r\n      pages: list.info.pages,\r\n      isLoaded: true\r\n    });\r\n  }\r\n\r\n  handlePaginationClick = event => {\r\n    const clickedPageNumber = +event.target.textContent;\r\n\r\n    this.setState(\r\n      {\r\n        isLoaded: false,\r\n        page: clickedPageNumber\r\n      },\r\n      async () => {\r\n        const list = await this.fetchEpisodes();\r\n        // const slicedListResults = Array.prototype.slice.call(list.results, 0);\r\n        \r\n        this.setState({\r\n          episodes: list.results,\r\n          pages: list.info.pages,\r\n          isLoaded: true\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.setState(\r\n      {\r\n        isLoaded: false,\r\n        page: 1\r\n      },\r\n      async () => {\r\n        const list = await this.fetchEpisodes();\r\n        // const slicedListResults = Array.prototype.slice.call(list.results, 0);\r\n\r\n        this.setState({\r\n          episodes: list.results,\r\n          pages: list.info.pages,\r\n          isLoaded: true\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  fetchEpisodes = () =>\r\n    getEpisodes({\r\n      id: this.state.id,\r\n      name: this.state.name,\r\n      air_date: this.state.air_date,\r\n      episode: this.state.episode,\r\n      episodes: () => {\r\n        if (undefined) {\r\n          return null\r\n        } else { \r\n          return this.state.episode.push()\r\n        } \r\n      },\r\n      created: this.state.created,\r\n      url: this.state.url,\r\n      page: this.state.page\r\n    });\r\n\r\n  render() {\r\n    const {\r\n      isLoaded,\r\n      name,\r\n      episodes,\r\n      page,\r\n      pages\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Loader isLoaded={isLoaded}>\r\n          <Filters\r\n            handleSubmit={this.handleFormSubmit}\r\n            handleChange={this.handleInputChange}\r\n            searchValue={name}\r\n          />\r\n          <div className=\"episodes episodes-background\">\r\n            <table className=\"episodes-table\">\r\n              <thead className=\"episodes-thead\">\r\n                  <tr>\r\n                    <th colSpan=\"5\">Episodes:</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>Number:</th>\r\n                    <th>Episode:</th>\r\n                    <th>Name:</th>\r\n                    <th>Air Date:</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody className=\"episodes-tbody\">   \r\n                {episodes.map(episode => (\r\n                  <tr key={episode.id} id={episode.id}>\r\n                    <td>{episode.id}</td>\r\n                    <td>{episode.episode}</td>\r\n                    <td>{episode.name}</td>\r\n                    <td>{episode.air_date}</td>\r\n                  </tr>\r\n                ),\r\n                console.log(episodes))}\r\n              </tbody>\r\n             </table>\r\n          </div>\r\n          <Pagination\r\n            handleClick={this.handlePaginationClick}\r\n            currentPage={page}\r\n            pages={pages}\r\n          />\r\n        </Loader>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Episodes;\r\n","import React from \"react\";\r\n\r\nimport \"./Filters.scss\";\r\n\r\nconst Filters = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className=\"filter-form\">\r\n      <input\r\n        name=\"type\"\r\n        type=\"text\"\r\n        className=\"filter-search\"\r\n        placeholder=\"Enter Type\"\r\n        onChange={props.handleChange}\r\n        defaultValue={props.typeValue}\r\n      />\r\n      <input\r\n        name=\"name\"\r\n        type=\"text\"\r\n        className=\"filter-search\"\r\n        placeholder=\"Enter Name\"\r\n        onChange={props.handleChange}\r\n        defaultValue={props.nameValue}\r\n      />\r\n      <input\r\n      name=\"dimension\"\r\n      type=\"text\"\r\n      className=\"filter-search\"\r\n      placeholder=\"Enter Dimension\"\r\n      onChange={props.handleChange}\r\n      defaultValue={props.dimensionValue}\r\n    />\r\n      <input type=\"submit\" value=\"Filter\" className=\"filter-submit\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { getLocations } from \"../../api/api\";\r\n\r\nimport { Filters } from \"./Locations_Filters\";\r\n\r\nimport { Pagination } from \"../Pagination\";\r\n\r\nimport { Loader } from \"../Loader\";\r\n\r\nimport \"./Locations.scss\";\r\n\r\n\r\nclass Locations extends Component {\r\n  state = {\r\n    id: \"\",\r\n    name: \"\",\r\n    type: \"\",\r\n    dimension: \"\",\r\n    residents: [],\r\n    locations: [],\r\n    created: \"\",\r\n    url: \"\",\r\n    page: 1,\r\n    isLoaded: false\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const list = await getLocations();\r\n    // const slicedListResults = Array.prototype.slice.call(list.results, 0);\r\n\r\n    this.setState({\r\n      locations: list.results,\r\n      pages: list.info.pages,\r\n      isLoaded: true\r\n    });\r\n  }\r\n\r\n  handlePaginationClick = event => {\r\n    const clickedPageNumber = +event.target.textContent;\r\n\r\n    this.setState(\r\n      {\r\n        isLoaded: false,\r\n        page: clickedPageNumber\r\n      },\r\n      async () => {\r\n        const list = await this.fetchLocations();\r\n        // const slicedListResults = Array.prototype.slice.call(list.results, 0);\r\n        \r\n        this.setState({\r\n          locations: list.results,\r\n          pages: list.info.pages,\r\n          isLoaded: true\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.setState(\r\n      {\r\n        isLoaded: false,\r\n        page: 1\r\n      },\r\n      async () => {\r\n        const list = await this.fetchLocations();\r\n        // const slicedListResults = Array.prototype.slice.call(list.results, 0);\r\n\r\n        this.setState({\r\n          locations: list.results,\r\n          pages: list.info.pages,\r\n          isLoaded: true\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  fetchLocations = () =>\r\n    getLocations({\r\n      id: this.state.id,\r\n      name: this.state.name,\r\n      type: this.state.type,\r\n      dimension: this.state.dimension,\r\n      url: this.state.url,\r\n      residents: this.state.residents.push(),\r\n      created: this.state.created,\r\n      page: this.state.page\r\n    });\r\n\r\n  render() {\r\n    const {\r\n      isLoaded,\r\n      name,\r\n      type,\r\n      dimension,\r\n      locations,\r\n      page,\r\n      pages\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Loader isLoaded={isLoaded}>\r\n          <Filters\r\n            handleSubmit={this.handleFormSubmit}\r\n            handleChange={this.handleInputChange}\r\n            nameValue={name}\r\n            typeValue={type}\r\n            dimensionValue={dimension}\r\n          />\r\n          <div className=\"locations locations-background\">\r\n            <table className=\"locations-table\">\r\n              <thead className=\"locations-thead\">\r\n                  <tr>\r\n                    <th colSpan=\"5\">Episodes:</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>Number:</th>\r\n                    <th>Type:</th>\r\n                    <th>Name:</th>\r\n                    <th>Dimension:</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody className=\"locations-tbody\">  \r\n                {locations.map(location => (\r\n                  <tr key={location.id} id={location.id}>\r\n                    <td>{location.id}</td>\r\n                    <td>{location.type}</td>\r\n                    <td>{location.name}</td>\r\n                    <td>{location.dimension}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n             </table>\r\n          </div>\r\n          <Pagination\r\n            handleClick={this.handlePaginationClick}\r\n            currentPage={page}\r\n            pages={pages}\r\n          />\r\n        </Loader>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Locations;\r\n","import React, { useCallback, useRef } from 'react';\r\n\r\nconst TodoItem = ({ todo, id, onRemoveTodo, onToggleTodoDone, onEditTodo, isDone, setCustomError }) => {\r\n    const removeTodoHandler = useCallback(() => onRemoveTodo(id), [id, onRemoveTodo]);\r\n\r\n    const toggleTodoDoneHandler = useCallback(() => onToggleTodoDone(id), [id, onToggleTodoDone]);\r\n\r\n    const editTodoHandler = useCallback(event => {\r\n        if (event.keyCode === 13) { // Detect ENTER key down\r\n            event.preventDefault(); // Prevent adding a new line because it's supposed to be single line\r\n\r\n            const { value } = event.target;\r\n\r\n            if (value.length < 3) {\r\n                setCustomError('Todo text is too short.');\r\n\r\n                return;\r\n            }\r\n\r\n            if (value.length > 20) {\r\n                setCustomError('Todo text is too long.');\r\n\r\n                return;\r\n            }\r\n\r\n            onEditTodo(id, event.target.value);\r\n\r\n            setCustomError(null) // Reset customError\r\n\r\n            event.target.blur(); // Make the current input lost focus after finishing onEditTodo\r\n        }\r\n    }, [id, onEditTodo, setCustomError]);\r\n\r\n    const checkboxRef = useRef(null);\r\n\r\n    return (\r\n        <li className=\"watchlist-item\">\r\n            <input\r\n                id=\"isWatched\"\r\n                type=\"checkbox\"\r\n                ref={checkboxRef}\r\n                checked={!!isDone}\r\n                onChange={toggleTodoDoneHandler}\r\n                className=\"watchlist-item__checkbox\"\r\n            />\r\n            <span onClick={() => checkboxRef.current.click()}  />\r\n            <input\r\n                type=\"text\"\r\n                defaultValue={todo} // innerHTML of the editable div\r\n                onKeyDown={editTodoHandler} // handle innerHTML change\r\n                style={{textDecoration: isDone ? 'line-through' : 'none'}}\r\n                className=\"watchlist-item__text\"\r\n            />\r\n            <button onClick={removeTodoHandler} className=\"watchlist-item__delete-button\">\r\n                <span role=\"img\" aria-labelledby=\"trash\" />🗑️\r\n            </button>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default React.memo(TodoItem);","/*\r\nimport React, { Component } from 'react'\r\nimport * as uuid from \"uuid\";\r\nimport './Todo.css'\r\n\r\n\r\nclass Todo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.input = React.createRef()\r\n        this.state = {\r\n            list: [],\r\n            isComplete: false\r\n        }\r\n    }\r\n\r\n    addTask = () => {\r\n\r\n        const Items = {\r\n            id: uuid.v4(),\r\n            value: this.input.current.value,\r\n            isComplete: false,\r\n            Date: new Date().toUTCString()\r\n        };\r\n\r\n        if(localStorage.getItem('list') == null){\r\n            const list = []\r\n            list.push(Items);\r\n            localStorage.setItem(\"list\", JSON.stringify(list))\r\n        }\r\n        else{\r\n            const list = JSON.parse(localStorage.getItem('list'))\r\n            list.push(Items)\r\n            localStorage.setItem(\"list\", JSON.stringify(list))\r\n        }\r\n        this.setState({\r\n            list: JSON.parse(localStorage.getItem('list'))\r\n        });\r\n    }\r\n\r\n   isChecked = ( list ) => {\r\n        let watchList = this.state.isComplete;\r\n        if (watchList == false) {\r\n            localStorage.setItem(list, watchList = true)\r\n        } else {\r\n\r\n        }\r\n        localStorage.setItem(list, watchList)\r\n       console.log(this.state.isComplete)\r\n    };\r\n\r\n    componentDidMount() {\r\n        const list = window.localStorage.getItem('list');\r\n        const parsedList = JSON.parse(list);\r\n        if(list == null){\r\n            return false\r\n        }\r\n        else{\r\n            this.setState({\r\n                list: parsedList,\r\n            })\r\n            console.log(this.state.list);\r\n        }\r\n    }\r\n\r\n    deleteItem = (event) => {\r\n\r\n        let index = event.target.getAttribute('data-key')\r\n        let listValue = JSON.parse(localStorage.getItem('list'));\r\n        listValue.splice(index, 1)\r\n        this.setState({list: listValue});\r\n        localStorage.setItem('list', JSON.stringify(listValue))\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"main-container\">\r\n                <h1>My watch list</h1>\r\n                <hr/>\r\n                <div className=\"container\">\r\n                    <input type=\"text\" placeholder=\"Add to watch list\" ref={this.input} />\r\n                    <button onClick={this.addTask} className=\"button\">Add</button>\r\n                    <ol>\r\n                        {\r\n                            this.state.list.map((item,index)=>\r\n                            {\r\n                                return(<li key={item.id}> {item.value}\r\n                                    <input name=\"rememberMe\" checked={ this.state.isChecked } onChange={ this.isChecked } type=\"checkbox\" />\r\n                                    <button className=\"button\" type=\"button\" value=\"delete\" data-key={index} onClick={ this.deleteItem }>Delete</button></li>)\r\n                            })\r\n                        }\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todo;\r\n*/\r\nimport React from 'react';\r\n\r\n// COMPONENT\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodoList = ({ todoItems, onRemoveTodo, onToggleTodoDone, onEditTodo, setCustomError }) => {\r\n    return (\r\n        <ul>\r\n            {\r\n                todoItems && // Check if todoItems exists\r\n                Array.isArray(todoItems) && // Check if it's an array\r\n                todoItems.length > 0 && // The array should not be empty\r\n                todoItems.map(({ id, todo, isDone }) => (\r\n                    <TodoItem\r\n                        key={id}\r\n                        id={id}\r\n                        todo={todo}\r\n                        onRemoveTodo={onRemoveTodo}\r\n                        onToggleTodoDone={onToggleTodoDone}\r\n                        onEditTodo={onEditTodo}\r\n                        isDone={isDone}\r\n                        setCustomError={setCustomError}\r\n                    />\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default React.memo(TodoList);","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst AddNewTodoForm = ({ onAddTodo, customError }) => {\r\n    // Initialize a form instance with useFormik hook\r\n    const formik = useFormik({\r\n        // Disable validation onChange and onBlur for keeping validation errors less annoying\r\n        validateOnChange: false,\r\n        validateOnBlur: false,\r\n        // Initial form values\r\n        initialValues: {\r\n            todo: '',\r\n        },\r\n        // Form values validation with Yup\r\n        validationSchema: Yup\r\n            .object()\r\n            .shape({\r\n                    todo: Yup.string()\r\n                        .min(3, 'Text is too short.')\r\n                        .max(20, 'Text is too long.')\r\n                        .required('Text is required.')\r\n                }\r\n            ),\r\n        onSubmit: (values, { resetForm }) => {\r\n            onAddTodo(values.todo);\r\n\r\n            // Reset the form after submitting successfully\r\n            resetForm();\r\n        },\r\n    })\r\n\r\n    // Get an error from formik.errors to show up because I don't like showing all of them at once\r\n    const errorKeys = Object.keys(formik.errors);\r\n\r\n    const aFormikError = errorKeys.length > 0 ? formik.errors[errorKeys[0]] : null;\r\n\r\n    const error = customError || aFormikError\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={formik.handleSubmit} className=\"watchlist-form\">\r\n                <input\r\n                    id=\"todo\"\r\n                    name=\"todo\"\r\n                    type=\"text\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.todo}\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Add to watch list\"\r\n                    className=\"filter-search\"\r\n                />\r\n                <button type=\"submit\" className=\"filter-submit\">Add</button>\r\n            </form>\r\n            {error && <span>{error}</span>}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default React.memo(AddNewTodoForm);","export const getTodoItemsFromLocalStorage = key => {\r\n    const value = localStorage.getItem(key); // Get the JSON string stored with provided key in localStorage\r\n\r\n    let todoItems = null; // Initialize todoItems variable to be assigned a final value later on\r\n\r\n    // Using try catch to avoiding exception to be thrown if the JSON string is invalid\r\n    // It may be a normal string and we can't JSON.parse it\r\n    try {\r\n        const parsedJSON = JSON.parse(value);\r\n\r\n        if (Array.isArray(parsedJSON)) {\r\n            todoItems = parsedJSON;\r\n        }\r\n    } catch(e) {\r\n        // If it's not a valid JSON string, then we should initialize an empty array for todoItems\r\n        todoItems = [];\r\n    }\r\n\r\n    return todoItems;\r\n}\r\n\r\n// This one is quite straightforward, it better have a comment too :))\r\nexport const saveTodoItemsToLocalStorage = (key, data) => localStorage.setItem(key, JSON.stringify(data));","import React, { useState, useCallback } from 'react';\r\n\r\n// COMPONENT\r\nimport TodoList from './TodoList';\r\nimport AddNewTodoForm from './AddNewTodoForm';\r\n\r\n// HELPER\r\nimport { getTodoItemsFromLocalStorage, saveTodoItemsToLocalStorage } from './Helpers';\r\n\r\n// STYLE\r\nimport style from './Todo.scss';\r\n\r\nconst Todo = () => {\r\n    // Initialize todoItems state with the JSON string stored under todo key in localStorage, if it's falsy, use an empty array instead\r\n    const [todoItems, setTodoItems] = useState(getTodoItemsFromLocalStorage('todo') || [])\r\n\r\n    const [customError, setCustomError] = useState(null)\r\n\r\n    // Event handler for adding new Todo, using useCallback to return a memoized callback.\r\n    const addTodoHandler = useCallback(todo => {\r\n        // Todo id should be unique and numeric >= 1, then the new Todo id should the biggest existing Todo id + 1\r\n        let latestTodoItem = null\r\n        if (todoItems.length === 1) {\r\n            latestTodoItem = todoItems[0]\r\n        }\r\n        else if (todoItems.length > 1) {\r\n            const todoItemsDescendingSortedById = todoItems.sort((a, b) => a.id > b.id)\r\n            latestTodoItem = todoItemsDescendingSortedById[0]\r\n        }\r\n\r\n        // Add new Todo at the beginning of the array\r\n        const newTodoItems = [\r\n            {\r\n                id: latestTodoItem ? latestTodoItem.id + 1 : 0,\r\n                todo,\r\n            },\r\n            ...todoItems,\r\n        ]\r\n\r\n        // Update todoItems state\r\n        setTodoItems(newTodoItems)\r\n\r\n        // Save to localStorage\r\n        saveTodoItemsToLocalStorage('todo', newTodoItems)\r\n    }, [todoItems]) // Dependencies list for useCallback\r\n\r\n    const removeTodoHandler = useCallback(id => {\r\n        // Filter out the todoItem which is about to be removed\r\n        const newTodoItems = todoItems.filter(todoItem => todoItem.id !== id)\r\n\r\n        // Update todoItems state\r\n        setTodoItems(newTodoItems)\r\n\r\n        // Save to localStorage\r\n        saveTodoItemsToLocalStorage('todo', newTodoItems)\r\n    }, [todoItems])\r\n\r\n    const toggleTodoDoneHandler = useCallback(id => {\r\n        const todo = todoItems.find(todoItem => todoItem.id === id)\r\n        todo.isDone = !todo.isDone\r\n\r\n        // Update todoItems state\r\n        setTodoItems([...todoItems])\r\n\r\n        // Save to localStorage\r\n        saveTodoItemsToLocalStorage('todo', todoItems)\r\n\r\n    }, [todoItems])\r\n\r\n    const editTodoHandler = useCallback((id, todo) => {\r\n        const editingTodo = todoItems.find(todoItem => todoItem.id === id)\r\n        editingTodo.todo = todo\r\n        // Update todoItems state\r\n        setTodoItems([...todoItems])\r\n\r\n        // Save to localStorage\r\n        saveTodoItemsToLocalStorage('todo', todoItems)\r\n\r\n    }, [todoItems])\r\n\r\n    return (\r\n        <div className={style.todo}>\r\n            <AddNewTodoForm\r\n                customError={customError} // Passing down customError\r\n                onAddTodo={addTodoHandler} // Passing down addTodoHandler\r\n            />\r\n\r\n            <TodoList\r\n                todoItems={todoItems} // Passing down todoItems\r\n                onRemoveTodo={removeTodoHandler} // Passing down removeTodoHandler\r\n                onToggleTodoDone={toggleTodoDoneHandler} // Passing down toggleTodoDoneHandler\r\n                onEditTodo={editTodoHandler} // Passing down editTodoHandler\r\n                setCustomError={setCustomError} // Passing down setCustomError\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Todo);","import React, { Component } from \"react\";\r\n\r\nimport { Route, HashRouter as Router } from \"react-router-dom\";\r\n\r\nimport { Header } from \"./components/Header\";\r\n\r\nimport { Home } from \"./components/1_Home\";\r\n\r\nimport { Characters } from \"./components/2_Characters\";\r\n\r\nimport { Episodes } from \"./components/3_Episodes\";\r\n\r\nimport { Locations } from \"./components/4_Locations\";\r\n\r\nimport { Watchlist } from \"./components/5_Watch_List\";\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <Router>\r\n            <Header />\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/characters/\" component={Characters} />\r\n            <Route path=\"/episodes/\" component={Episodes} />\r\n            <Route path=\"/locations/\" component={Locations} />\r\n            <Route path=\"/watchlist/\" component={Watchlist} />\r\n        </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/spinner.a8089a45.svg\";"],"sourceRoot":""}